[
  
    {
      "title"       : "Github Blog 첫 글",
      "category"    : "",
      "tags"        : "",
      "url"         : "./Github-Blog-%EC%B2%AB-%EA%B8%80.html",
      "date"        : "2021-12-08 20:10:00 +0900",
      "description" : "",
      "content"     : "블로그 같은건 처음 해보는데 Github로 시작하려니 어려운 점이 많네요."
    } ,
  
    {
      "title"       : "TIL 1",
      "category"    : "",
      "tags"        : "",
      "url"         : "./TIL.html",
      "date"        : "2021-12-08 20:10:00 +0900",
      "description" : "",
      "content"     : "어제 오늘 동안 데브코스 강좌의 내용과 더불어 Git의 사용법에 대해 공부하였다.이제 Git에서 뭔가 기여할 때 clone 해와서 수정하고 add, commit 과정을 거쳐 push까지 하면 되는 건 알았다.강의에선 이미 알고 있던 자료구조에 대한 내용을 아주 빠르게 진행하고 있어서 복습하는 기분으로 보고 있다.도중에 나온 실습 문제에서 Python의 sort만으로 풀기엔 key parameter를 정하기 곤란한 문제가 있었다.C++이면 그냥 compare 함수를 만들어서 풀었을텐데 싶어서 찾아보니 python에도 비슷한 기능을 하는 함수가 있었다.functools 모듈의 cmp_to_key 라는 함수인데 원하는 방식으로 크기를 비교하여 그 결과를 음수, 0, 양수로 리턴하면 되는 것이다.예를 들면from functools import cmp_to_keydef cmp(a, b) : if a &gt; b : return 1 elif a &lt; b : return -1 return 0 l = [3, 1, 2]l.sort(key = cmp_to_key(cmp))이와 같이 쓰면 리스트 l 을 [1, 2, 3]으로 정렬해 준다."
    } ,
  
    {
      "title"       : "TIL 1",
      "category"    : "",
      "tags"        : "",
      "url"         : "./TIL.html",
      "date"        : "2021-12-08 20:10:00 +0900",
      "description" : "",
      "content"     : "어제 오늘 동안 데브코스 강좌의 내용과 더불어 Git의 사용법에 대해 공부하였다.이제 Git에서 뭔가 기여할 때 clone 해와서 수정하고 add, commit 과정을 거쳐 push까지 하면 되는 건 알았다.강의에선 이미 알고 있던 자료구조에 대한 내용을 아주 빠르게 진행하고 있어서 복습하는 기분으로 보고 있다.도중에 나온 실습 문제에서 Python의 sort만으로 풀기엔 key parameter를 정하기 곤란한 문제가 있었다.C++이면 그냥 compare 함수를 만들어서 풀었을텐데 싶어서 찾아보니 python에도 비슷한 기능을 하는 함수가 있었다.functools 모듈의 cmp_to_key 라는 함수인데 원하는 방식으로 크기를 비교하여 그 결과를 음수, 0, 양수로 리턴하면 되는 것이다.예를 들면from functools import cmp_to_keydef cmp(a, b) : if a &gt; b : return 1 elif a &lt; b : return -1 return 0 l = [3, 1, 2]l.sort(key = cmp_to_key(cmp))이와 같이 쓰면 리스트 l 을 [1, 2, 3]으로 정렬해 준다."
    } 
  
]
